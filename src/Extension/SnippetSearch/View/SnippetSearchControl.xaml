<UserControl x:Class="Extension.SearchWindow.View.SnippetSearchControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
			 xmlns:local="clr-namespace:Extension.SearchWindow.View" 
			 xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
			 xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
			 xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
			 Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="CodeSnippetSearch">

	<UserControl.Resources>

		<ResourceDictionary>
			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
			<!--Overwrite default button styling-->
			<!--see https://stackoverflow.com/questions/28346852/background-does-not-change-of-button-c-sharp-wpf -->
			<ControlTemplate x:Key="PreviewButton" TargetType="ButtonBase">
				
				<Border BorderThickness="{TemplateBinding Border.BorderThickness}"
					BorderBrush="{TemplateBinding Border.BorderBrush}"
					Background="{TemplateBinding Panel.Background}"
					Name="border"
					SnapsToDevicePixels="True">
					<ContentPresenter RecognizesAccessKey="True"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                Name="contentPresenter"
                                Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Focusable="False" />
				</Border>
				
				<ControlTemplate.Triggers>
					<Trigger Property="Button.IsDefaulted" Value="True">
						
						<Setter Property="Border.BorderBrush" TargetName="border">
							<Setter.Value>
								<DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="UIElement.IsMouseOver" Value="True">
						<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.FileTabDocumentBorderHighlightKey}}" />
						<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.FileTabSelectedTextKey}}" />
						<Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.AccentPaleKey}}" />
						<Setter Property="Content" Value="Insert"/>
					</Trigger>
					<Trigger Property="ButtonBase.IsPressed" Value="True">
						<Setter Property="Panel.Background" TargetName="border">
							<Setter.Value>
								<SolidColorBrush>#FFC4E5F6</SolidColorBrush>
							</Setter.Value>
						</Setter>
						<Setter Property="Border.BorderBrush" TargetName="border">
							<Setter.Value>
								<SolidColorBrush>#FF2C628B</SolidColorBrush>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="ToggleButton.IsChecked" Value="True">
						<Setter Property="Panel.Background" TargetName="border">
							<Setter.Value>
								<SolidColorBrush>#FFBCDDEE</SolidColorBrush>
							</Setter.Value>
						</Setter>
						<Setter Property="Border.BorderBrush" TargetName="border">
							<Setter.Value>
								<SolidColorBrush>#FF245A83</SolidColorBrush>
							</Setter.Value>
						</Setter>
					</Trigger>
					<Trigger Property="UIElement.IsEnabled" Value="False">
						<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.AccentPaleKey}}" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			

			<!--Customizable Button stylings-->
			<Style TargetType="Button">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonTextKey}}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ButtonFaceKey}}"/>
				<Setter Property="Width" Value="90"/>
				<Setter Property="Content" Value="Preview"/>
			</Style>

			<!--Customizable Label stylings-->
			<Style TargetType="Label">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
			</Style>

			<!--Customizable RadioButton stylings-->
			<Style TargetType="RadioButton">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
			</Style>

			<!--Customizable CheckBox stylings-->
			<Style TargetType="CheckBox">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
			</Style>

			<!--Customizable TextBox stylings-->
			<Style TargetType="TextBox">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.SearchBoxBackgroundKey}}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.SearchBoxBorderKey}}"/>
				<Setter Property="Height" Value="25"/>
			</Style>

		</ResourceDictionary>
	</UserControl.Resources>

	<UserControl.DataContext>
		<local:SnippetSearchViewModel/>
	</UserControl.DataContext>	
	
    <Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="30"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<!--Title-->
		<Grid Grid.Row="0">

			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			
			<TextBlock Grid.Column="0" Margin="10" HorizontalAlignment="Left" Text="Code Snippet Search"/>
			
			<DockPanel Grid.Column="1" HorizontalAlignment="Right">
				<TextBlock  Margin="10" HorizontalAlignment="Right" Text="Logged as" />
				<TextBlock Margin="0 10 10 0" HorizontalAlignment="Right" >
					<Hyperlink NavigateUri="https://app.codiga.io/account/profile">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="RequestNavigate">
							<i:EventTrigger.Actions>
								<i:InvokeCommandAction Command="{Binding OpenProfile}" PassEventArgsToCommand="True"/>
							</i:EventTrigger.Actions>
						</i:EventTrigger>
					</i:Interaction.Triggers>
					<Run Text="{Binding UserName, Mode=OneWay}"></Run>
					</Hyperlink>
				</TextBlock>

				<DockPanel.Style>
					<Style TargetType="{x:Type DockPanel}">
						<Setter Property="Visibility" Value="Visible"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding UserName}" Value="">
							<Setter Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
						</Style.Triggers>
					</Style>
				</DockPanel.Style>
			</DockPanel>
		</Grid>
		
		
		<!--Search box-->
		<Grid Grid.Row="1" Margin="5">
			
			<TextBox x:Name="txtSearch" VerticalContentAlignment="Center" IsEnabled="{Binding EditorOpen}" Text="{Binding Term, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				<TextBox.InputBindings>
					<KeyBinding Key="Enter" Command="{Binding Path=GetSnippets}"></KeyBinding>
				</TextBox.InputBindings>

				<i:Interaction.Triggers>
					<i:EventTrigger EventName="KeyUp">
						<i:EventTrigger.Actions>
							<i:InvokeCommandAction Command="{Binding KeyDown}" PassEventArgsToCommand="True"/>
						</i:EventTrigger.Actions>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</TextBox>
			
			<TextBlock IsHitTestVisible="False" Text="{Binding Watermark, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.GrayTextKey}}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility" Value="Collapsed"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, ElementName=txtSearch}" Value="">
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>

			<imaging:CrispImage x:Name="imgCheck" Margin="0 0 5 0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Search}" HorizontalAlignment="Right"/>
		</Grid>
	
		<!--Search parameters-->
		<Grid Grid.Row="2" Margin="10 0 0 0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<RadioButton Grid.Column="0" Grid.Row="0" GroupName="Filter" IsEnabled="{Binding EditorOpen}" IsChecked="{Binding AllSnippets, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">All snippets</RadioButton>
			<RadioButton Grid.Column="0" Grid.Row="1" GroupName="Filter" IsEnabled="{Binding EditorOpen}" IsChecked="{Binding OnlyPrivate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Private Snippets Only</RadioButton>
			<RadioButton Grid.Column="1" Grid.Row="0" GroupName="Filter" IsEnabled="{Binding EditorOpen}" IsChecked="{Binding OnlyPublic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Public Snippets Only</RadioButton>
			<CheckBox Grid.Column="1" Grid.Row="1" IsEnabled="{Binding EditorOpen}" IsChecked="{Binding OnlyFavorite, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">Favorite Snippets Only</CheckBox>
		</Grid>
		
		<!--Snippet scroll area-->
		<ScrollViewer Grid.Row="3" HorizontalScrollBarVisibility="Disabled" Width="Auto" Height="Auto" VerticalScrollBarVisibility="Auto">
			<ItemsControl Grid.Column="0" ItemsSource="{Binding Snippets}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<!--Snippet view-->
						<Grid Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowFrameKey}}" Margin="5">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
						
							<!--Title bar-->

							<Grid Grid.Row="0" Width="Auto">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<DockPanel Grid.Column="0">
									<TextBlock Padding="10"  Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}" FontSize="18" HorizontalAlignment="Left" Text="{Binding CodeSnippet.Header.Title}" TextTrimming="WordEllipsis"/>
									<imaging:CrispImage Visibility="{Binding CodeSnippet.Header.IsPrivate, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" ToolTip="Private Snippet" x:Name="imgPrivate" Margin="0 0 5 0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Lock}"/>
									<imaging:CrispImage Visibility="{Binding CodeSnippet.Header.IsPublic, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" ToolTip="Public Snippet" x:Name="imgPublic" Margin="0 0 5 0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Unlock}"/>
									<imaging:CrispImage Visibility="{Binding CodeSnippet.Header.IsSubscribed, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Left" ToolTip="Favorite Snippet" x:Name="imgSubscribed" Margin="0 0 5 0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Favorite}"/>
								</DockPanel>
								
								<Button Grid.Column="1" Margin="10" HorizontalAlignment="Right" Template="{DynamicResource PreviewButton}" Command="{Binding Path=DataContext.InsertSnippet, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding }">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="MouseEnter">
											<i:EventTrigger.Actions>
												<i:InvokeCommandAction Command="{Binding Path=DataContext.ShowPreview, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}"/>
											</i:EventTrigger.Actions>
										</i:EventTrigger>

										<i:EventTrigger EventName="MouseLeave">
											<i:EventTrigger.Actions>
												<i:InvokeCommandAction Command="{Binding Path=DataContext.HidePreview, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}"/>
											</i:EventTrigger.Actions>
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</Button>
								
							</Grid>
							
							<!--Snippet meta data-->
							<StackPanel Margin="5"  Grid.Row="1" Orientation="Horizontal">
								<Label VerticalAlignment="Center">Owner:</Label>
								<TextBlock VerticalAlignment="Center" Text="{Binding CodeSnippet.Header.Author}"></TextBlock>
							</StackPanel>
							
							<!--Code-->
							<TextBox  Margin="30 0 0 0" Height="Auto" Grid.Row="2" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Auto" IsReadOnly="true" Padding="10" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.VizSurfaceGreenMediumKey}}" Background="{DynamicResource {x:Static vsshell:VsBrushes.BackgroundKey}}" FontFamily="Cascadia Code" Text="{Binding CodeSnippet.Snippet.Code.CodeString, Mode=OneWay}"></TextBox>
							
							<!--Description-->
							<TextBlock Padding="10" Grid.Row="3" TextWrapping="Wrap" Width="Auto" Text="{Binding CodeSnippet.Header.Description}"></TextBlock>
							
							<!--Footer-->
							<TextBlock Grid.Row="4"></TextBlock>

						</Grid>

					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

		</ScrollViewer>

	</Grid>



</UserControl>
	
